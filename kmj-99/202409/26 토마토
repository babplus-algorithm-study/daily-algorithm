from collections import deque

n,m=map(int,input().split())

graph=[]
for i in range(m):
    graph.append(list(map(int,input().split())))

dx=[-1,1,0,0]
dy=[0,0,-1,1]


def bfs(graph):
    count=0
    x,y=0,0
    queue=deque()

    for i in range(m):
        for j in range(n):
            if graph[i][j]==1:
                queue.append((i,j))
    res=0

    while queue:
        x,y=queue.popleft()
        
        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]
            
            if nx<=-1 or nx>=m or ny<=-1 or ny>=n or graph[nx][ny]==-1:
                continue
            
            if graph[nx][ny]==0:
                queue.append((nx,ny))
                graph[nx][ny]=graph[x][y]+1
                res=graph[nx][ny]-1

    for i in range(m):
        for j in range(n):
            if graph[i][j]==0:
                res=-1
                break
    print(res)
bfs(graph)
